{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseName": {
            "type": "string",
            "defaultValue": "[uniquestring(resourceGroup().id)]",
            "metadata": {
                "description": "Specifies a base name that is used to generate the names for Azure resources."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The Azure region for all resources."
            }
        },
        "eventHubSku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [ "Basic", "Standard" ],
            "metadata": {
                "description": "Specifies the messaging tier for Event Hub Namespace."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "storageQueueName": {
            "type": "string",
            "defaultValue": "widgets",
            "metadata": {
                "description": "description"
            }
        },
        "outputStorageQueueName": {
            "type": "string",
            "defaultValue": "widgets-output",
            "metadata": {
                "description": "description"
            }
        }
    },
    "variables": {
        "eventHubNamespace": "[concat(parameters('baseName'), 'ns')]",
        "eventHubName": "[parameters('baseName')]",
        "storageAccountName": "[concat(parameters('baseName'),'sa')]",
        "hostingPlanName": "[concat(parameters('baseName'), '-plan')]",
        "functionAppName": "[concat(parameters('baseName'),'-func')]",
        "applicationInsightsName": "[concat(parameters('baseName'), '-ai')]",
        "eventHubRoleDefinitionId":"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'a638d3c7-ab3a-418d-83e6-5f17a39d4fde')]",
        "eventHubRoleAssignmentName":"[guid(resourceId('Microsoft.Web/sites', variables('functionAppName')), variables('eventHubRoleDefinitionId'), 'c42e58d2-4f18-4afc-8c7b-5870fdeb9c38')]",
        "storageQueueRoleDefinitionId":"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
        "storageQueueRoleAssignmentName":"[guid(resourceId('Microsoft.Web/sites', variables('functionAppName')), variables('storageQueueRoleDefinitionId'), '0a9dd9cc-3ac8-46c0-95ca-5c2e34be621e')]"
    },
    "resources": [
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('applicationInsightsName')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('applicationInsightsName')]"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('eventHubNamespace')]",
            "location": "[parameters('location')]",
            "sku": {
                "capacity": 1,
                "name": "[parameters('eventHubSku')]",
                "tier": "[parameters('eventHubSku')]"
            },
            "properties": {
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0
            }

        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2017-04-01",
            "location": "[parameters('location')]",
            "name": "[concat(variables('eventHubNamespace'), '/', variables('eventHubName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace'))]"
            ],
            "properties": {
                "messageRetentionInDays": 7,
                "partitionCount": 7
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2019-06-01",
            "tags": {
                "displayName": "storageaccount1"
            },
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default/', parameters('storageQueueName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default/', parameters('outputStorageQueueName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "EP1",
                "tier": "ElasticPremium"
            },
            "properties": {
                "maximumElasticWorkerCount": 20
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[variables('functionAppName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').InstrumentationKey]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "QueueName",
                            "value": "[parameters('storageQueueName')]"
                        },
                        {
                            "name": "OutputQueueName",
                            "value": "[parameters('outputStorageQueueName')]"
                        },
                        {
                            "name": "MyStorageConnection__endpoint",
                            "value": "[concat('https://', variables('storageAccountName'), '.queue.', environment().suffixes.storage)]"
                        },
                        {
                            "name": "EventHubConnectionString__fullyQualifiedNamespace",
                            "value": "[concat(variables('eventHubNamespace'), '.servicebus.windows.net')]"
                        },
                        {
                            "name": "EventHubName",
                            "value": "[variables('eventHubName')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('eventHubRoleAssignmentName')]",
            "scope": "[concat('Microsoft.EventHub/namespaces', '/', variables('eventHubNamespace'))]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace'))]",
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('eventHubRoleDefinitionId')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2019-08-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('storageQueueRoleAssignmentName')]",
            "scope": "[concat('Microsoft.Storage/storageAccounts', '/', variables('storageAccountName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('storageQueueRoleDefinitionId')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2019-08-01', 'Full').identity.principalId]"
            }
        }
    ]
}